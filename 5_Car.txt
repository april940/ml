import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import accuracy_score

# Load the dataset
data = pd.read_csv('car_evaluation.csv')

# Define the column names
data.columns = ['buying', 'maint', 'doors', 'persons', 'lug_boot', 'safety']

# Encode categorical features
le = LabelEncoder()
for col in data.columns:
    data[col] = le.fit_transform(data[col])

# Define X (features) and y (target)
X = data.drop('safety', axis=1)
y = data['safety']


# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


# Initialize and train the Random Forest Classifier
rf_classifier = RandomForestClassifier(n_estimators=100, random_state=42)
rf_classifier.fit(X_train, y_train)

# Make predictions
y_pred = rf_classifier.predict(X_test)


# Decode the predictions
y_pred_decoded = le.inverse_transform(y_pred)


# Calculate accuracy
accuracy = accuracy_score(y_test, y_pred)


# Print the results
for i in range(len(y_test)):
    print(f"Actual Safety: {le.classes_[y_test.iloc[i]]}, Predicted Safety: {y_pred_decoded[i]}")

print(f"Accuracy: {accuracy * 100:.2f}%")


