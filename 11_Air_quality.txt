import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import plotly.express as px


# Load the dataset from the specified file path
file_path = ("AirQuality.csv")
df = pd.read_csv(file_path)


# Check for missing values in the dataset
df.isna().sum()

# Display the first few rows of the dataset
df.head()

# Convert the 'Date' column to a datetime format
df['Date'] = pd.to_datetime(df['Date'], format="%Y-%m-%d")


# Resample and aggregate the 'AQI' data by monthly mean
df_m = df[['Date', 'AQI']]
df_m.index = df_m['Date']
df_m = df_m.resample('M').agg({'AQI': 'mean'})
fig = px.line(df_m, x=df_m.index, y="AQI", title='AQI trend over years resampled monthly')
fig.show()


# Select specific columns and resample the data by monthly mean
df_p_m = df[['Date', 'PM2.5', 'PM10', 'NO', 'NO2', 'NOx', 'NH3', 'CO', 'SO2', 'O3', 'Benzene', 'Toluene', 'Xylene', 'AQI', 'AQI_Bucket']]
df_p_m = df_p_m.set_index('Date')
df_p_m = df_p_m.resample('M').agg({'PM2.5': np.mean, 'PM10': np.mean, 'NO': np.mean, 'NO2': np.mean, 'NOx': np.mean, 'NH3': np.mean, 'CO': np.mean, 'SO2': np.mean, 'O3': np.mean, 'Benzene': np.mean, 'Xylene': np.mean})
fig = px.line(df_p_m, x=df_p_m.index, y=df_p_m['CO'], title='Air Quality Index by Month')
fig.show()

# Set 'Date' as the index and resample the data by monthly mean for specific pollutants
df['Date'] = pd.to_datetime(df['Date'], format="%Y-%m-%d")
df.set_index('Date', inplace=True)
df_p_m = df[['PM2.5', 'PM10', 'NO', 'NO2', 'NOx', 'NH3', 'CO', 'SO2', 'O3', 'Benzene', 'Toluene', 'Xylene']].resample('M').mean()
fig = px.line(df_p_m, x=df_p_m.index, y=df_p_m.columns, title='Air Quality Index by Month')
fig.show()



# Group the data by 'City' and calculate the mean of 'AQI' for each city
aqi_city = df.groupby('City').agg({'AQI': np.mean})
fig = px.bar(aqi_city, x=aqi_city.index, y='AQI')
fig.show()

# Resample the data by month and calculate the mean for each pollutant
df_p_m = df[['CO', 'NO', 'NO2', 'O3', 'SO2', 'PM2.5', 'PM10', 'NH3']].resample('M').mean()




# Create subplots for box and violin plots
fig, axs = plt.subplots(nrows=1, ncols=2, figsize=(18, 6))
# Box plot
axs[0].boxplot(df_p_m)
axs[0].set_xticklabels(df_p_m.columns, rotation=45)
axs[0].set_title('Box Plot')
# Violin plot
axs[1].violinplot(df_p_m.values)
axs[1].set_xticklabels(df_p_m.columns, rotation=45)
axs[1].set_title('Violin Plot')
plt.show()


# Create a scatter plot using Seaborn to visualize AQI vs. PM2.5
plt.figure(figsize=(10, 6))
sns.scatterplot(data=df, x='AQI', y='PM2.5', size='AQI', sizes=(20, 200), legend='full')
plt.title('Scatter Plot: AQI vs. PM2.5')
plt.xlabel('AQI')
plt.ylabel('PM2.5')
plt.show()
